DIFF bin/wiki.py:
120,125d119
< # Feature a single line of the input stream
< def select_content(directory):
<     return  [ directory.replace('[[PICK]]','PICK LINE') ]
<     #return '<b>'+choice(lines)+'</b><br>'
< 
< 
133,176d126
< def convert_pick(lines):
<     for i,line in enumerate(lines):
<         if '[[PICK]]' in line:
<             #return lines[:i] + [ select_quote(line, lines[i:]) ]
<             return lines[:i] +  select_content(line) +  lines[i+1:]
<     return lines
<    
< #-----------------------------------------------------------------------------
< # Line convertion
< 
< def get_title(text):
<     '''
<     The first line holds the page title
<     '''
<     if len(text)>0: 
<         return remove_muse(text[0]).rstrip()[2:][:-2]
<     return 'No title'
< 
< 
< def convert_line(line, breaks=True):
<     '''
<     Convert a single text line to html
<     '''
<     line = remove_muse(line).rstrip()
<     if breaks:
<         line = space_breaks(line)
<     line = format_rules(line)
<     line = format_bullets(line)
<     line = break_paragraphs(line)
<     line = convert_links(line)
<     line = preserve_spaces(line)
<     line = make_heading(line)
<     line = make_bold(line)
<     return make_italic(line)
< 
< 
< def convert_html(text):
<     '''
<    Convert array of strings to html body text
<     '''
<     text = convert_pick(text)
<     text = convert_quote(text)
<     text = map(convert_line, text)
<     return '\n'.join(text)
209d158
<     #print 'LINES:', '\n'.join(lines)
214c163
< def print_all_tabs(text, format_lines=False):
---
> def print_all_tabs(text, format_lines=True):
218d166
< 
225c173
<             print_tab(g, True)
---
>             print_tab(g, format_lines)
230,252c178
< # Doc files
< 
< from os import system,environ
< from os.path import join
< from sys import argv
< from datetime           import datetime
< 
< 
< 
< #-----------------------------------------------------------------------------
< # Domains
< 
< def domain_map():
<     '''
<     Read the domain mapping from a file
<     '''
<     map = {}
<     for d in open(doc_file('Domains')).read().split('\n'):
<         d = d.split(' ')
<         if len(d)==2:
<             map[d[0]] = d[1]
<     return map
< 
---
> # Read text file
254c180
< def doc_path(path):
---
> def read_text(f):
256c182
<     Convert a url to a directory
---
>     Return the text from the file
258,276c184,186
<     m = domain_map()
< 
<     domain = path[0]
<     if m.has_key(domain):
<         domain = m[domain]
<     else:
<         domain = '.'
< 
<     if len(path)>1:
<         user = path[1].replace('Anonymous', 'Public')
<     else:
<         user = 'Public'
< 
<     file = path[2:]
<     return '/'.join([user,domain] + file)
< 
< 
< #-----------------------------------------------------------------------------
< # File processing
---
>     if exists(f):
>         return open(f).read()
>     return 'No file found, '+f
279c189
< def log_page(doc):
---
> def get_title(text):
281c191
<     Log the page hit in page.log  (time, ip, user, page, doc) 
---
>     The first line holds the page title
283,286c193,195
<     logFile=environ['p']+'/logs/user/doc.log'
<     f=open(logFile,'a')
<     f.write(str(datetime.now())+',  '+doc+'\n')
<     f.close()
---
>     if len(text)>0: 
>         return remove_muse(text[0]).rstrip()[2:][:-2]
>     return 'No title'
289c198
< def doc_file(path):
---
> def convert_line(line):
291c200
<     Path to doc in file system
---
>     Convert a single text line to html
293c202,211
<     return join(environ['pd'],path)
---
>     line = remove_muse(line).rstrip()
>     #line = space_breaks(line)
>     line = format_rules(line)
>     line = format_bullets(line)
>     line = break_paragraphs(line)
>     line = convert_links(line)
>     line = preserve_spaces(line)
>     line = make_heading(line)
>     line = make_bold(line)
>     return make_italic(line)
296c214
< def read_text(f):
---
> def convert_html(text):
298c216
<     Return the text from the file
---
>    Convert array of strings to html body text
300,302c218,220
<     if exists(f):
<         return open(f).read()
<     return 'No file found, '+f
---
>     text = convert_quote(text)
>     text = map(convert_line, text)
>     return '\n'.join(text)
323a242
> # Create html file contents from stdin
325,342c244,245
<     '''
<     Create html file contents from stdin
<     '''
<     text = stdin.read() 
<     print_all_tabs(text)
<     #print '\n'.join(lines)
< 
< from os import system
< from sys import argv
< 
< def show_doc():
<     path   = ['','']
<     if len(argv)>1: 
<         path = argv[1].split('/')
< 
<     doc = doc_path(path)
<     log_page(doc)
<     system('hammer-show '+doc)
---
>     text = stdin.read().split('\n')
>     print_all_tabs(convert_html(text))
