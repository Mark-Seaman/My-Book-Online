* Core Practices to Fight Bit Rot *                 -*-muse-*-

In order to counteract the long-term effects of bit rot, you must adopt four best practices.
Companies and individuals who make a commitment to these practices will significantly out-perform
those who do not.

Some of these ideas are easy to embrace while others are counter intuitive. I have spent over thirty
years studying the process of software development.  Many ideas of come and gone. These four are
essential to producing high-quality software and low cost.

The four core ideas are:
 * Automatic system test
 * Unit test
 * Development loop
 * Strategic version control

If you leave out one of these practices, you put yourself at a serious disadvantage.  Each of these
practices rely on the others to give you confidence in the overall process.  For example, if you
take away unit testing it makes it very difficult to capture the learning that happens in the
development loop.  Or if you do not use strategic version control, then your system tests does not
give you a quick way to tell when a problem was introduced.

The common thread with each of these practices is that they give you understanding of how your
system is running.  It is absolutely critical that you remain in control of your system at all
times.  You must have a solid baseline and be able to make extensions from the stable system.

Then you must quickly be able to determine that your new extended system is working better than the
old one.  Every step should be an improvement in your overall system behavior and structure.  Each
of these core practices help you measure the incremental progress that you make with each step.
