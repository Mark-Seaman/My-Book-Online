* The Cure for Bit Rot *                 -*-muse-*-

Fortunately, there are very effective methods for fighting bit rot.  There are principles and
practices that that guarantee a longer life for existing software system.  Learning these techniques
can protect a large software investment.

These four areas will dramatically extend the useful life of your software.

 1. Automate your testing
 2. Refactor ruthlessly
 3. Fix all known problems
 4. Make changes incrementally

**Automate your testing**

If your test cannot be run automatically then they will not be run very often.  Only automatic
testing can be used to give you the confidence that your code is running properly.  Hiring an army
of people to push buttons and right down results is a very bad business decision.  Your full battery
of tests should run at least once a day.

**Refactor ruthlessly**

Once you have tests in place you can confidently modify your code.  Your tests will tell you when
anything breaks in your code.  This lets you make very dramatic changes to the structure of your
code without introducing any new defects.  The design and functionality of your code can be changed
to match the changes in the environment.

**Fix all known problems**

The longer problems are in a system the greater the damage will be.  Bugs breed!  Every effort
should be made to address design and coding flaws as quickly as they are discovered.  Set goals and
track metrics for how long it takes to remove problems.

**Make changes incrementally**

Start with a baseline of functionality.  Create tests to ensure that the system always remains
running.  If the system ever gets worse then revert the changes and try again. Every change that you
make to the system should improve both the structure and the functionality of your system.
Constantly be adding tests to the areas that you are working in to ensure that any problems that you
introduce are discovered quickly.

