* Simplify *                 -*-muse-*-

Albert Einstein once said, "Everything should be as simple as
possible, but not simpler."

Don't do work that isn't needed! This seems like it should be
obvious. Why would we ever do work that isn't really needed? And yet I
am amazed at how often I find myself doing tasks for a number of other
reasons. One way to break this cycle of ineffective activity is to
only perform tasks that have an immediate customer. The person that
benefits could be an external client or an internal client (even
yourself) that needs you to create something.

If you only do the minimal work needed to satisfy the 'customer' then
you will eliminate any gratuitous activities that don't contribute
directly to the result. Manufacturing organizations have functioned
like this for years. Toyota is an excellent example. On their
manufacturing lines they only build a car to satisfy a specific
order. Then they only install a dashboard to contribute, which in term
generates a request for a speedometer assembly, which creates an order
for the required parts.

It is wasteful to work on tasks that produce results only to find that
there is not a clear way to use those results because of other missing
pieces in the system. This is where we get the concept of work
flow. If you are in the business of publishing any kind of material,
then all of the tasks that you perform should be directly supporting
the publication that is required. It is important to start with the
end in mind and work backwards.

If the result is clear, then it will be easy to figure out the easiest
way to achieve it. What is the minimum set of subtasks that will
achieve the desired result? Then what are the subtasks to required to
produce those results? This is a more effective way to plan a project
to avoid assembling activities that may or may not contribute directly
to the end goal.

Try to reduce every solution to its essence. Inventing something
scrutinize it thoroughly to see if half of the remaining parts can be
removed. During the invention process don't worry about the complexity
too much. But do not forget this important step before accepting the
final solution.

Complexity is the enemy. If people have to remember to perform a
complicated set of steps then it will never happen. Software
automation that requires thousands of lines of code requires a
phenomenal investment to keep running. The best software to debug is
one command that does exactly what you want. The best manual task is
the one that requires zero steps for humans to perform.
